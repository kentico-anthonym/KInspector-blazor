@using KInspector.Core.Modules
@using KInspector.Core.Services.Interfaces
@inject IConfigService configService
@inject IInstanceService instanceService

<div class="p-4 w-full flex text-gray-700 dark:text-white">
    <button type="button" @onclick="Handler!"
        class="grow-0 focus:outline-none font-medium text-sm text-center inline-flex items-center me-2">
        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
            <path fill-rule="evenodd" d="M8.6 5.2A1 1 0 0 0 7 6v12a1 1 0 0 0 1.6.8l8-6a1 1 0 0 0 0-1.6l-8-6Z" clip-rule="evenodd" />
        </svg>
        <span class="sr-only">Run</span>
    </button>
    <h2 class="grow-0">@Name</h2>
    <div class="grow-0 space-x-2 ml-2">
        @if (IsIncompatible)
        {
            <span class="bg-red-100 text-red-800 text-xs font-medium px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-red-400 border border-red-400">Incompatible</span>
        }
        @if (IsUntested && !IsIncompatible)
        {
            <span class="bg-yellow-100 text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-yellow-300 border border-yellow-300">Untested</span>
        }
    </div>
    <div class="grow text-right">
        @foreach (var tag in Module!.Tags)
        {
            <span class="bg-gray-100 text-gray-800 text-sm font-medium me-4 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300">@tag</span>
        }
    </div>
</div>

@code {
    private int adminDbVersion = 0;

    [Parameter, EditorRequired]
    public string? Name { get; set; }

    [Parameter, EditorRequired]
    public IModule? Module { get; set; }

    [Parameter, EditorRequired]
    public Action? Handler { get; set; }

    private bool IsIncompatible => Module!.IncompatibleVersions.Select(v => v.Major).Contains(AdminDatabaseMajorVersion);

    private bool IsUntested => !Module!.CompatibleVersions.Select(v => v.Major).Contains(AdminDatabaseMajorVersion);

    private int AdminDatabaseMajorVersion
    {
        get
        {
            if (adminDbVersion == 0)
            {
                var currentInstance = configService.GetCurrentInstance();
                var instanceDetails = instanceService.GetInstanceDetails(currentInstance);

                adminDbVersion = instanceDetails?.AdministrationDatabaseVersion?.Major ?? 0;
            }

            return adminDbVersion;
        }
    }
}
