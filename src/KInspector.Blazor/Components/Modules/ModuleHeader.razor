@using KInspector.Core.Constants
@using KInspector.Core.Models
@using KInspector.Core.Modules
@using KInspector.Core.Services.Interfaces
@inject IConfigService configService
@inject IInstanceService instanceService
@inject IModuleMetadataService moduleMetadataService

@{
    var moduleDetails = moduleMetadataService.GetModuleDetails(Module!.Codename);
}

<h2 id="heading-@Module!.Codename">
    <button type="button"
            class="flex items-center justify-between w-full p-5 rtl:text-right text-gray-500 border border-b-0 border-gray-200 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 gap-3"
            data-accordion-target="#body-@Module!.Codename" aria-expanded="false" aria-controls="body-@Module!.Codename">
        <div class="flex text-left">
            @if (IsIncompatible)
            {
                <span class="bg-red-100 text-red-800 text-xs font-medium me-4 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-red-400 border border-red-400">Incompatible</span>
            }
            @if (IsUntested && !IsIncompatible)
            {
                <span class="bg-yellow-100 text-yellow-800 text-xs font-medium me-4 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-yellow-300 border border-yellow-300">Untested</span>
            }
            @if (Results is not null)
            {
                <ResultIcon ModuleName="Module!.Codename" Result="Results" />
            }
            <span class="@(Results is not null ? "ml-3" : "") text-gray-600 dark:text-gray-200 font-medium">@((MarkupString)(moduleDetails.Name ?? string.Empty))</span>
            <span class="text-gray-400 ml-6">@((MarkupString)(moduleDetails.ShortDescription ?? string.Empty))</span>
        </div>
        <div class="flex text-right">
            @foreach (var tag in Module!.Tags)
            {
                <span class="bg-gray-100 text-gray-800 text-sm font-medium me-4 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300">@tag</span>
            }
            <svg data-accordion-icon class="w-3 h-3 rotate-180 shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5 5 1 1 5" />
            </svg>
        </div>
    </button>
</h2>

@code {
    private int adminDbVersion = 0;

    [Parameter, EditorRequired]
    public IModule? Module { get; set; }

    [Parameter]
    public ModuleResults? Results { get; set; }

    private bool IsIncompatible => Module!.IncompatibleVersions.Select(v => v.Major).Contains(AdminDatabaseMajorVersion);

    private bool IsUntested => !Module!.CompatibleVersions.Select(v => v.Major).Contains(AdminDatabaseMajorVersion);

    private int AdminDatabaseMajorVersion
    {
        get
        {
            if (adminDbVersion == 0)
            {
                var currentInstance = configService.GetCurrentInstance();
                var instanceDetails = instanceService.GetInstanceDetails(currentInstance);

                adminDbVersion = instanceDetails?.AdministrationDatabaseVersion?.Major ?? 0;
            }

            return adminDbVersion;
        }
    }
}
